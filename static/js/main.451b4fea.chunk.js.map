{"version":3,"sources":["components/form/Main.tsx","components/form/ChoosePlanet.tsx","components/form/ChooseSide.tsx","components/form/PersonData.tsx","components/ui/Form.tsx","components/ui/Button.tsx","components/form/Summary.tsx","components/ui/Label.tsx","App.tsx","index.tsx"],"names":["Side","Gender","ChoosePlanet","props","useState","planets","setPlanets","useEffect","fetchPlanets","a","planetArr","fetch","request","json","response","results","forEach","planet","push","id","name","onSubmit","changeStep","defaultValue","onChange","handleChange","value","map","el","type","onClick","Wrapper","styled","div","StyledDiv","Arrow","ChooseSide","chooseDarkSideHandler","val","chooseSide","src","alt","lightSide","darkSide","PersonData","values","required","minLength","age","skinColor","hairColor","gender","male","female","FormStyles","css","StyledForm","form","Form","children","StyledButton","button","Button","CharacterData","Summary","side","clearData","StyledLabel","label","Label","initVal","step","Main","data","setData","vel","e","target","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.451b4fea.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {ChoosePlanet, ChooseSide, PersonData, Summary} from \"../Components\";\n\nexport enum Side {\n    darkSide = 'Dark Side',\n    lightSide = 'Light Side',\n}\n\nexport enum Gender {\n    male = 'Male',\n    female = 'Female'\n}\n\ninterface Steps {\n    step: number,\n    side: Side\n    name: string,\n    age: number,\n    skinColor: string,\n    hairColor: string,\n    gender: Gender,\n    planet: string,\n}\n\nexport interface IStepProps {\n    values: Steps,\n    changeStep: (step: number) => void,\n    handleChange?: (e: React.ChangeEvent<any>) => void,\n    chooseSide?: (val: Side) => void,\n    clearData?: () => void,\n}\n\nconst initVal = {\n    step: 1,\n    side: Side.lightSide,\n    name: '',\n    age: 1  ,\n    skinColor: '',\n    hairColor: '',\n    gender: Gender.male,\n    planet: 'Earth',\n}\n\nexport const Main = () => {\n    const [data, setData] = useState<Steps>(initVal);\n\n    const changeStep = (vel: number) => {\n        setData({...data, step: vel})\n    }\n\n    const handleChange = (e: React.ChangeEvent<any>): void => {\n        setData({...data, [e.target.name]: e.target.value});\n    };\n\n    switch (data.step) {\n        case 1:\n            return <ChooseSide\n                values={data}\n                changeStep={(vel) => changeStep(vel)}\n                chooseSide={(val) => setData({...data, side: val})}\n            />\n        case 2:\n            return <PersonData\n                values={data}\n                changeStep={(vel) => changeStep(vel)}\n                handleChange={handleChange}\n            />\n        case 3:\n            return <ChoosePlanet\n                values={data}\n                changeStep={(vel) => changeStep(vel)}\n                handleChange={handleChange}\n            />\n        case 4:\n            return <Summary\n                values={data}\n                changeStep={(vel) => changeStep(vel)}\n                clearData={() => setData(initVal)}\n            />\n        default:\n            return <p>Something went wrong</p>\n    }\n}","import React, {useEffect, useState} from \"react\";\nimport {Button, Form, Label} from \"../Components\";\nimport {IStepProps} from \"./Main\";\n\ninterface IPlanet {\n    id: number,\n    name: string\n}\n\nexport const ChoosePlanet = (props: IStepProps) => {\n    const [planets, setPlanets] = useState<Array<IPlanet>>();\n\n    useEffect(() => {\n        const fetchPlanets = async () => {\n            let planetArr: Array<IPlanet> = []\n            const request = await fetch('https://swapi.dev/api/planets/')\n            const response = await request.json();\n\n            if (response.results) {\n                response.results.forEach((planet: IPlanet) => {\n                    planetArr.push({id: planet.id, name: planet.name})\n                })\n                setPlanets(planetArr);\n            }\n        }\n        fetchPlanets()\n    }, []);\n\n    return (\n            <Form onSubmit={()=>props.changeStep(4)}>\n                <Label>\n                    Choose planet:\n                    <select name=\"planet\" defaultValue={'earth'} onChange={props.handleChange}>\n                        {planets &&\n                        <>\n                            <option value=\"Earth\" key='earth'>Earth</option>\n                            {planets.map(el => {\n                                return <option value={el.name} key={el.name}>{el.name}</option>\n                            })}\n                        </>\n                        }\n                    </select>\n                </Label>\n                <Button type='button' onClick={()=>props.changeStep(3)}>Back</Button>\n                <Button type='submit'>Next</Button>\n            </Form>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport {IStepProps, Side} from \"./Main\";\n\nconst yoda = \"https://ik.imagekit.io/kacper/mulkti-form/milton-wiklund-R5esYAv65t4-unsplash__1__1__1__LXRvTqF1o3.png?updatedAt=1638040780059\"\nconst darthVader = 'https://ik.imagekit.io/kacper/mulkti-form/tommy-van-kessel-_sDlQf6f7gc-unsplash_1__1__ojKoyuA8v.png?updatedAt=1638040773802'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100vh;\n`;\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 1 1 50%;\n\n  img {\n    width: 80%;\n    max-width: 30rem;\n  }\n`;\n\nconst Arrow = styled.div`\n  margin: 3em auto;\n  border: 2em solid transparent;\n  border-top: 2em solid #000;\n  -webkit-animation: moveArrow 0.6s infinite alternate ease-in-out;\n  animation: moveArrow 0.6s infinite alternate ease-in-out;\n  cursor: pointer;\n\n  @keyframes moveArrow {\n    0% {\n      transform: translateY(0);\n      opacity: 0.4;\n    }\n    100% {\n      transform: translateY(0.4em);\n      opacity: 0.9\n    }\n  }\n  @-webkit-keyframes moveArrow {\n    0% {\n      transform: translateY(0);\n      opacity: 0.4;\n    }\n    100% {\n      transform: translateY(0.4em);\n      opacity: 0.9\n    }\n  }\n`;\n\nexport const ChooseSide = (props: IStepProps) => {\n\n    const chooseDarkSideHandler = (val: Side) => {\n        props.chooseSide!(val);\n        props.changeStep!(2);\n    };\n\n    return (\n        <Wrapper>\n            <StyledDiv>\n                <img src={yoda} alt=\"Yoda\"/>\n                <Arrow onClick={() => chooseDarkSideHandler(Side.lightSide)}/>\n            </StyledDiv>\n            <StyledDiv>\n                <img src={darthVader} alt=\"Darth Vader\"/>\n                <Arrow onClick={() => chooseDarkSideHandler(Side.darkSide)}/>\n            </StyledDiv>\n        </Wrapper>\n    )\n}","import React from \"react\";\nimport {Gender, IStepProps} from \"./Main\";\nimport {Form, Button, Label} from \"../Components\";\n\nexport const PersonData = (props: IStepProps) => {\n    return (\n        <Form onSubmit={() => props.changeStep(3)}>\n            <Label>\n                Name:\n                <input name='name' defaultValue={props.values.name} onChange={props.handleChange} type=\"text\" required\n                       minLength={2}/>\n            </Label>\n            <Label>\n                Age:\n                <input name='age' defaultValue={ props.values.age} onChange={props.handleChange} type=\"number\" required/>\n            </Label>\n            <Label>\n                Skin color:\n                <input name='skinColor' defaultValue={props.values.skinColor} onChange={props.handleChange} type=\"text\"\n                       required minLength={2}/>\n            </Label>\n            <Label>\n                Hair color:\n                <input name='hairColor' defaultValue={props.values.hairColor} onChange={props.handleChange} type=\"text\"\n                       required minLength={2}/>\n            </Label>\n            <Label>\n                Gender:\n                <select name=\"gender\" defaultValue={props.values.gender} onChange={props.handleChange}>\n                    <option value={Gender.male}>Male</option>\n                    <option value={Gender.female}>Female</option>\n                </select>\n            </Label>\n            <Button type='button' onClick={()=> props.changeStep(1)}>Back</Button>\n            <Button type='submit'>Next</Button>\n        </Form>\n    )\n}","import React, {ReactNode} from \"react\";\nimport styled, {css} from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 100vh;\n`;\n\nexport const FormStyles = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n\n  row-gap: .6rem;\n  width: 80%;\n  max-width: 45rem;\n  padding: 2rem;\n  border-radius: 3rem;\n  background-color: rgba(119, 107, 107, .5);\n  font-size: 1.3rem;\n`;\n\nconst StyledForm = styled.form`\n${FormStyles};\n`;\n\ninterface IForm {\n    onSubmit: () => void,\n    children?: ReactNode,\n}\n\nexport const Form = (props: IForm) => {\n    return (\n        <Wrapper>\n            <StyledForm onSubmit={props.onSubmit}>\n                {props.children}\n            </StyledForm>\n        </Wrapper>\n    )\n}","import React, {ReactNode} from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  margin-top: 1rem;\n  padding: .7rem 1.4rem;\n  border: 2px solid black;\n  border-radius: .8rem;\n\n  background: #3C3C3B;\n  font-size: 1.4em;\n  font-weight: bold;\n  color: white;\n`;\n\ninterface IProps {\n    type: 'submit' | 'button',\n    onClick?: () => void,\n    children: ReactNode,\n}\n\nexport const Button = (props: IProps) => {\n    return (\n        <StyledButton type={props.type} onClick={props.onClick}>\n            {props.children}\n        </StyledButton>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport {IStepProps} from \"./Main\";\nimport {FormStyles} from \"../ui/Form\";\nimport {Button} from \"../ui/Button\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 100vh;\n`;\n\nconst CharacterData = styled.div`\n  ${FormStyles};\n  flex-direction: column;\n  align-items: start;\n  row-gap: 1rem;\n  border: 2px solid black;\n  \n  button{\n    align-self: center;\n  }\n`;\n\nexport const Summary = (props: IStepProps) => {\n    const clearData = () => {\n        props.clearData!();\n    }\n\n    return (\n        <Wrapper>\n            <CharacterData>\n                <p>You choose the {props.values.side}</p>\n                <p>Name: {props.values.name}</p>\n                <p>Planet: {props.values.planet}</p>\n                <p>Gender: {props.values.gender}</p>\n                <p>Age: {props.values.age}</p>\n                <p>Skin color: {props.values.skinColor}</p>\n                <p>Hair color: {props.values.hairColor}</p>\n                <Button type='button' onClick={clearData}>try again</Button>\n            </CharacterData>\n        </Wrapper>\n    )\n}","import React, {ReactNode} from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledLabel = styled.label`\n  flex: 1 1 100%;\n  display: flex;\n  flex-direction: column;\n  row-gap: .5rem;\n\n  font-size: 1.5rem;\n\n  input, select {\n    padding: 1rem;\n    border-radius: .8rem;\n    border: 2px solid black;\n    background-color: rgba(208, 208, 208, 0.2);\n\n    :active, :focus {\n      outline: none;\n    }\n  }\n`;\n\nexport const Label = (props: { children?: ReactNode }) => {\n    return (\n        <StyledLabel>\n            {props.children}\n        </StyledLabel>\n    )\n}","import React from 'react';\nimport {createGlobalStyle} from 'styled-components';\nimport {Main} from \"./components/form/Main\";\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n  }\n\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n    width: 100%;\n    height: 100%;\n  }\n\n  body {\n    font-family: 'Roboto', sans-serif;\n    box-sizing: border-box;\n    line-height: 150%;\n    background: #3C3C3B;\n  }\n`;\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle/>\n            <Main/>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}